/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javaapplication2;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import static javaapplication2.FileTxt.readFile;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import org.apache.poi.xwpf.usermodel.XWPFDocument;
import org.apache.poi.xwpf.usermodel.XWPFParagraph;

/**
 *
 * @author nguye
 */
public class App extends javax.swing.JFrame {

    /**
     * Creates new form App
     */
    String pathVanBanCanKy;
    String vanBanCanKy;

    public App() {
        initComponents();
        jPanel1.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGroup = new javax.swing.ButtonGroup();
        GenerationKey = new javax.swing.JButton();
        rdAuto = new javax.swing.JRadioButton();
        rdNhapKhoa = new javax.swing.JRadioButton();
        txtAlpha = new javax.swing.JTextField();
        txtP = new javax.swing.JTextField();
        txtA = new javax.swing.JTextField();
        txtK = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtBeta = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        btnClose = new javax.swing.JButton();
        btnGenKey = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtInpEncrypt = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtInpDecrypt = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtOutDecrypt = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtOutEncrypt = new javax.swing.JTextArea();
        btnEncrypt = new javax.swing.JButton();
        btnDecrypt = new javax.swing.JButton();
        btnSend = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jComboBox3 = new javax.swing.JComboBox<>();
        jButton2 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(102, 255, 204));

        GenerationKey.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        GenerationKey.setForeground(new java.awt.Color(0, 204, 51));
        GenerationKey.setText("Generation Key");

        btnGroup.add(rdAuto);
        rdAuto.setSelected(true);
        rdAuto.setLabel("Tạo khóa tự động");
        rdAuto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdAutoActionPerformed(evt);
            }
        });

        btnGroup.add(rdNhapKhoa);
        rdNhapKhoa.setLabel("Nhập khóa");

        txtAlpha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAlphaActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 204, 51));
        jLabel1.setText("Alpha");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 204, 51));
        jLabel2.setText("P");
        jLabel2.setToolTipText("");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 204, 51));
        jLabel3.setText("a");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 204, 51));
        jLabel4.setText("K");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 204, 51));
        jLabel5.setText("Beta");

        btnClose.setBackground(new java.awt.Color(255, 0, 0));
        btnClose.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnClose.setForeground(new java.awt.Color(255, 255, 255));
        btnClose.setText("Close");
        btnClose.setFocusCycleRoot(true);
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        btnGenKey.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnGenKey.setText("Tạo khóa");
        btnGenKey.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenKeyActionPerformed(evt);
            }
        });

        btnClear.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnClear.setForeground(new java.awt.Color(255, 0, 0));
        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jButton4.setForeground(new java.awt.Color(0, 204, 51));
        jButton4.setText("Receive Ciphertext");

        txtInpEncrypt.setColumns(20);
        txtInpEncrypt.setRows(5);
        jScrollPane1.setViewportView(txtInpEncrypt);

        txtInpDecrypt.setColumns(20);
        txtInpDecrypt.setRows(5);
        txtInpDecrypt.setEnabled(false);
        jScrollPane2.setViewportView(txtInpDecrypt);

        txtOutDecrypt.setColumns(20);
        txtOutDecrypt.setRows(5);
        txtOutDecrypt.setEnabled(false);
        jScrollPane3.setViewportView(txtOutDecrypt);

        txtOutEncrypt.setColumns(20);
        txtOutEncrypt.setRows(5);
        txtOutEncrypt.setEnabled(false);
        jScrollPane4.setViewportView(txtOutEncrypt);

        btnEncrypt.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnEncrypt.setForeground(new java.awt.Color(255, 0, 0));
        btnEncrypt.setText("Encrypt");
        btnEncrypt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEncryptActionPerformed(evt);
            }
        });

        btnDecrypt.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnDecrypt.setForeground(new java.awt.Color(0, 204, 51));
        btnDecrypt.setText("Decrypt");
        btnDecrypt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDecryptActionPerformed(evt);
            }
        });

        btnSend.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnSend.setForeground(new java.awt.Color(0, 204, 51));
        btnSend.setText("Send Ciphertext");
        btnSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel6.setText("Mai Thị Hường - 201960590  ");

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication2/logo.PNG"))); // NOI18N

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "COM2" }));

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "COM1" }));

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jButton2.setForeground(new java.awt.Color(0, 0, 153));
        jButton2.setText("Upload File");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 103, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 131, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(97, 97, 97)
                        .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSend, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                            .addComponent(jScrollPane4)
                            .addComponent(jButton2)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnEncrypt)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 260, Short.MAX_VALUE)
                            .addComponent(jScrollPane3))
                        .addGap(145, 145, 145))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnDecrypt, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(173, 173, 173))))
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(GenerationKey)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(rdNhapKhoa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(rdAuto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtAlpha)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(35, 35, 35)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(68, 68, 68))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(txtP)))
                        .addGap(30, 30, 30))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnGenKey)
                        .addGap(44, 44, 44)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 14, Short.MAX_VALUE)
                                        .addGap(73, 73, 73))
                                    .addComponent(txtA))
                                .addGap(26, 26, 26)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 15, Short.MAX_VALUE)
                                        .addGap(67, 67, 67))
                                    .addComponent(txtK))
                                .addGap(37, 37, 37)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                                        .addGap(22, 22, 22))
                                    .addComponent(txtBeta)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(52, 52, 52)
                        .addComponent(btnClose)
                        .addGap(21, 21, 21))))
            .addGroup(layout.createSequentialGroup()
                .addGap(286, 286, 286)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnClose)
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnGenKey)
                            .addComponent(btnClear)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(GenerationKey))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(rdAuto))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtAlpha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rdNhapKhoa)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtBeta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnEncrypt)
                            .addComponent(jButton2))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addComponent(btnDecrypt)
                                .addGap(29, 29, 29)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnSend)
                                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton4)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 77, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(46, 46, 46))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(92, 92, 92))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtAlphaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAlphaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAlphaActionPerformed

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        App a = new App();
        a.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        dispose();
    }//GEN-LAST:event_btnCloseActionPerformed

    private void btnGenKeyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenKeyActionPerformed
        // TODO add your handling code here:
        if (rdAuto.isSelected()) {
            autoGenKey();
        } else {
            checkHandleKey();
        }
    }//GEN-LAST:event_btnGenKeyActionPerformed

    private void autoGenKey() {
//        resetAllFeild (); 
        int max = 45000, min = 8000;
        int p, a, alpha, beta, k;
        Random random = new Random();
        do {
            p = random.nextInt((max - min) + 1) + min;
        } while (checkSNT(p) == false);
        txtP.setText("" + p);
//	jtfPCrypto.setText ("" + p); 
        //set a
        a = random.nextInt((p - 2) + 1) + 2;
        txtA.setText("" + a);
        //set alpha 
        alpha = random.nextInt((p - 1) + 1) + 1;
        txtAlpha.setText("" + alpha);

        //set K
        k = random.nextInt((p - 2) + 1);
        txtK.setText("" + k);

        //set beta 
        beta = BinhPhuongNhan(alpha, a, p);
        txtBeta.setText("" + beta);

//        btnEncrypt.setEnabled(true);
    }

    private void checkHandleKey() {
        if (txtP.getText().isEmpty() || txtK.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Chưa nhập đủ thông tin P và K!",
                    "Error",
                    JOptionPane.OK_OPTION);
        }
        int p, a, alpha, beta, k;
        try {
            p = Integer.valueOf(txtP.getText());
            k = Integer.valueOf(txtK.getText());
            if (!checkSNT(p)) {
                JOptionPane.showMessageDialog(this, "P không phải số nguyên tố. Vui lòng nhập lại!",
                        "Error",
                        JOptionPane.OK_OPTION);
            }
            if (k <= 1 || k >= (p - 1)) {
                JOptionPane.showMessageDialog(this, "Giá trị K chưa thỏa mãn điều kiện. Vui lòng nhập lại!",
                        "Error",
                        JOptionPane.OK_OPTION);
            }

            Random random = new Random();

            //set a
            a = random.nextInt((p - 2) + 1) + 2;
            txtA.setText("" + a);
            //set alpha 
            alpha = random.nextInt((p - 1) + 1) + 1;
            txtAlpha.setText("" + alpha);

            //set beta 
            beta = BinhPhuongNhan(alpha, a, p);
            txtBeta.setText("" + beta);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Nhập định dạng số!",
                    "Error",
                    JOptionPane.OK_OPTION);
        }

    }

    //thuat toan euclide mo rong
    private int modInverse(int a, int m) {
        int m0 = m;
        int y = 0, x = 1;
        if (m == 1) {
            return 0;

        }
        while (a > 1) {
            int q = a / m;
            int t = m;
            m = a % m;
            a = t;
            t = y;
            //update x va y
            y = x - q * y;
            x = t;
        }
        //make x positive
        if (x < 0) {
            x += m0;
        }
        return x;
    }

    private int BinhPhuongNhan(int alpha, int a, int p) {
        int ketqua = 1, n = p, x = alpha;
        String k = Integer.toBinaryString(a);//chuyen sang binary
        int i = 0;
        while (i < k.length()) {
            ketqua *= ketqua;
            ketqua %= n;
            if (k.charAt(i) == '1') {
                ketqua *= x;
            }
            ketqua %= n;
            i++;
        }
        return ketqua;
    }

    private boolean checkSNT(int n) {
        if (n < 2) {
            return false;
        }
        // check so nguyen to khi n >= 2
        int squareRoot = (int) Math.sqrt(n);
        for (int i = 2; i <= squareRoot; i++) {
            if (n % i == 0) {
                return false;
            }
        }
        return true;
    }

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        txtAlpha.setText("");
        txtA.setText("");
        txtP.setText("");
        txtK.setText("");
        txtBeta.setText("");
        rdAuto.isSelected();
        txtInpEncrypt.setText("");
        txtOutEncrypt.setText("");
        txtInpDecrypt.setText("");
        txtOutDecrypt.setText("");

    }//GEN-LAST:event_btnClearActionPerformed

    private void btnEncryptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEncryptActionPerformed
        if (txtInpEncrypt.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Không có thông điệp cần mã hóa!",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
        } else {
            if (txtP.getText().isEmpty() || txtAlpha.getText().isEmpty() || txtBeta.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Lỗi tạo khóa!",
                        "Error",
                        JOptionPane.ERROR_MESSAGE);
            }
            try {
                ArrayList<Integer> arr_ban_ma = new ArrayList<>();
                txtOutEncrypt.setText("");
                txtInpDecrypt.setText("");
                txtOutDecrypt.setText("");
                Random rd = new Random();
                int p = Integer.valueOf(txtP.getText());
                int alpha = Integer.valueOf(txtAlpha.getText());
                int k = rd.nextInt((p - 2) + 1);
                int beta = Integer.valueOf(txtBeta.getText());
                int y1 = BinhPhuongNhan(alpha, k, p);
                int y2;
                String banRo = txtInpEncrypt.getText();
                String banMa = "";
                int i = 0;
                while (i < banRo.length()) {
                    arr_ban_ma.add(y1);
                    y2 = ((banRo.charAt(i) * BinhPhuongNhan(beta, k, p)) % p);
                    arr_ban_ma.add(y2);
                    i++;
                }

                //chuyen chuoi ma hoa sang dang chu
                for (int j = 0; j < arr_ban_ma.size(); j++) {
                    banMa += (char) (arr_ban_ma.get(j) % p);
                }
                txtOutEncrypt.setText(banMa);
            } catch (Exception e) {
                System.out.println("Loi tao khoa");
            }

        }
    }//GEN-LAST:event_btnEncryptActionPerformed

    private void btnSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendActionPerformed
        if (txtOutEncrypt.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Không có chuỗi mã hóa cần gửi đi!",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
        } else {
            txtInpDecrypt.setText(txtOutEncrypt.getText());
        }
    }//GEN-LAST:event_btnSendActionPerformed

    private void btnDecryptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDecryptActionPerformed
        if (txtInpDecrypt.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Không có chuỗi mã hóa!",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
        } else {
            ArrayList<Integer> arr_ban_ma = new ArrayList<>();
            String banMa = txtInpDecrypt.getText();
            int p = Integer.valueOf(txtP.getText());
            int a = Integer.valueOf(txtA.getText());
            int i = 0;
            while (i < banMa.length()) {
                arr_ban_ma.add((int) banMa.charAt(i));
                arr_ban_ma.add((int) banMa.charAt(++i));
                i++;

            }
            //d=y2(y1^a)^-1 mod p
            int k = BinhPhuongNhan(arr_ban_ma.get(0), a, p);  //k=y1^a mod p
            String banRo = "";

            for (int j = 1; j < arr_ban_ma.size(); j += 2) {
                //d=y2(k)^-1 mod p
                char xx = (char) ((arr_ban_ma.get(j) * modInverse(k, p)) % p);
                banRo += xx;
            }
            txtOutDecrypt.setText(banRo);

        }
    }//GEN-LAST:event_btnDecryptActionPerformed

    private void rdAutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdAutoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdAutoActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        JFileChooser jfile = new JFileChooser();
        jfile.showOpenDialog(jPanel2);
        File f = jfile.getSelectedFile();
        pathVanBanCanKy = f.getAbsolutePath();
        if (pathVanBanCanKy.contains(".doc") == false || pathVanBanCanKy.contains(".docx") == false) {

            try {
                txtInpEncrypt.setText(docFileDocx(pathVanBanCanKy));
            } catch (IOException ex) {
                Logger.getLogger(App.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {
            try {
                String content = readFile(pathVanBanCanKy);
                vanBanCanKy = content;
                txtInpEncrypt.setText(content);
            } catch (IOException e) {
                System.out.println(e);
            }
        }


    }//GEN-LAST:event_jButton2ActionPerformed
    private static String docFileDocx(String path) throws IOException {
        String s = "";
        try {
            FileInputStream fis = new FileInputStream(path);
            XWPFDocument docx = new XWPFDocument(fis);
            List<XWPFParagraph> parList = docx.getParagraphs();
            for (XWPFParagraph paragraph : parList) {
                s += paragraph.getText() + "\n";
            }
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }
        return s;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new App().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton GenerationKey;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnDecrypt;
    private javax.swing.JButton btnEncrypt;
    private javax.swing.JButton btnGenKey;
    private javax.swing.ButtonGroup btnGroup;
    private javax.swing.JButton btnSend;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JRadioButton rdAuto;
    private javax.swing.JRadioButton rdNhapKhoa;
    private javax.swing.JTextField txtA;
    private javax.swing.JTextField txtAlpha;
    private javax.swing.JTextField txtBeta;
    private javax.swing.JTextArea txtInpDecrypt;
    private javax.swing.JTextArea txtInpEncrypt;
    private javax.swing.JTextField txtK;
    private javax.swing.JTextArea txtOutDecrypt;
    private javax.swing.JTextArea txtOutEncrypt;
    private javax.swing.JTextField txtP;
    // End of variables declaration//GEN-END:variables
    private javax.swing.JPanel jPanel2;
}
